package rzk;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.4.7
 * 2022-12-12T21:25:59.404+01:00
 * Generated source version: 3.4.7
 *
 */
@WebServiceClient(name = "InformationBeanService",
                  wsdlLocation = "http://127.0.0.1:8080/CountryInfoEJB/InformationBean?wsdl",
                  targetNamespace = "http://rzk/")
public class InformationBeanService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://rzk/", "InformationBeanService");
    public final static QName InformationBeanPort = new QName("http://rzk/", "InformationBeanPort");
    static {
        URL url = null;
        try {
            url = new URL("http://127.0.0.1:8080/CountryInfoEJB/InformationBean?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(InformationBeanService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://127.0.0.1:8080/CountryInfoEJB/InformationBean?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public InformationBeanService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public InformationBeanService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public InformationBeanService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public InformationBeanService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public InformationBeanService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public InformationBeanService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns InformationBeanRemote
     */
    @WebEndpoint(name = "InformationBeanPort")
    public InformationBeanRemote getInformationBeanPort() {
        return super.getPort(InformationBeanPort, InformationBeanRemote.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InformationBeanRemote
     */
    @WebEndpoint(name = "InformationBeanPort")
    public InformationBeanRemote getInformationBeanPort(WebServiceFeature... features) {
        return super.getPort(InformationBeanPort, InformationBeanRemote.class, features);
    }

}
